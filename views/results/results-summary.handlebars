<div id="admin">
    <div class="admin-inner">

        <!-- sidebar -->
        {{> _results-nav}}
        <!-- end of sidebar -->

        <section>
            <div class="container-fluid text-dark">
                <div class="row my-sm-3">
                    <div class="col-xl-10 col-lg-9 col-md-8 ml-auto">
                        <div class="row">
                            <div class="col-12">
                                <h4>{{title}}</h4>
                            <p>
                                This section provides you with an overall summary of your assessment. Here you can see how each factor stacks up against
                                each other. Make sure to go through each section to get reports and recommendations for each
                                factor.
                            </p>
                            <canvas id="sectionSummary" width="400" height="300" class="mb-4 pb-4"></canvas>
                            <div class="row text-center">
                                <div class="col-md-6">
                                    <h4>Reading Speed</h4>
                                    <div id="readingSpeed" class="mb-4 pb-4"></div>
                                </div>
                                <div class="col-md-6">
                                    <h4>Typing Speed</h4>
                                    <div id="typingSpeed" class="mb-4 pb-4"></div>
                                </div>
                            </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- end of charts -->


    </div>
</div>








<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script>
<script>
    var results = {{{ resultString }}};
    var labelArray = [];
    var dataArray = []
    for (let i = 0; i < results.length; i++) {
        if (results[i].factor == "Reading Speed" || results[i].factor == "Typing Speed" || results[i].factor == "Download Speed") {

        } else {
            labelArray.push(results[i].factor);
            dataArray.push(results[i].value);
        }
    }

    new Chart(document.getElementById('sectionSummary').getContext('2d'), {
        type: 'radar',
        data: {
            labels: labelArray,
            datasets: [
                {
                    label: "{{user.firstname}} {{user.lastname}}",
                    fill: true,
                    backgroundColor: "rgba(255,99,132,0.2)",
                    borderColor: "rgba(255,99,132,1)",
                    pointBorderColor: "#fff",
                    pointBackgroundColor: "rgba(255,99,132,1)",
                    pointBorderColor: "#fff",
                    data: dataArray
                }
            ]
        },
        options: {
            scale: {
                ticks: {
                    beginAtZero: true,
                    min: 0,
                    max: 100,
                    stepSize: 10
                }
            },
            title: {
                display: true,
                text: 'Score for each factor in percentage (%)'
            }
        }
    });
</script>

<!-- reading speed chart  -->
<script>
    var result1 = {{{ resultString }}}
    var readingSpeed = 0
    for (let i = 0; i < result1.length; i++) {
        if (result1[i].factor == "Reading Speed") {

            readingSpeed = result1[i].value;
        }

    }
    var chart1 = c3.generate({
        bindto: '#readingSpeed',
        data: {
            columns: [
                ['Reading Speed', 1]
            ],
            type: 'gauge',
            onclick: function (d, i) { console.log("onclick", d, i); },
            onmouseover: function (d, i) { console.log("onmouseover", d, i); },
            onmouseout: function (d, i) { console.log("onmouseout", d, i); }
        },
        gauge: {
            label: {
                format: function (value, ratio) {
                    return value;
                },
                //            show: true // to turn off the min/max labels.
            },
            min: 0, // 0 is default, //can handle negative min e.g. vacuum / voltage / current flow / rate of change
            max: 1000, // 100 is default
            units: ' WPM',
            //    width: 39 // for adjusting arc thickness
        },
        color: {
            pattern: ['#FF0000', '#F97600', '#F6C600', '#60B044'], // the three color levels for the percentage values.
            threshold: {
                //            unit: 'value', // percentage is default
                //            max: 200, // 100 is default
                values: [100, 200, 250, 1000]
            }
        },
        size: {
            height: 300,
        }
    });
    setTimeout(function () {
        d3.select('#readingSpeed .c3-chart-arcs-background')
            .transition()
            .style('fill', '#333');
    }, 1000);
    setTimeout(function () {
        chart1.load({
            columns: [['Reading Speed', readingSpeed]]
        });
    }, 100);
</script>

<!-- typing speed chart  -->
<script>
    var results = {{{ resultString }}}
    var speed = 0
    for (let i = 0; i < results.length; i++) {
        if (results[i].factor == "Typing Speed") {

            speed = results[i].value;
        }

    }
    var chart = c3.generate({
        bindto: '#typingSpeed',
        data: {
            columns: [
                ['Typing Speed', 1]
            ],
            type: 'gauge',
            onclick: function (d, i) { console.log("onclick", d, i); },
            onmouseover: function (d, i) { console.log("onmouseover", d, i); },
            onmouseout: function (d, i) { console.log("onmouseout", d, i); }
        },
        gauge: {
            label: {
                format: function (value, ratio) {
                    return value;
                },
                //            show: true // to turn off the min/max labels.
            },
            min: 0, // 0 is default, //can handle negative min e.g. vacuum / voltage / current flow / rate of change
            max: 100, // 100 is default
            units: ' AWPM',
            //    width: 39 // for adjusting arc thickness
        },
        color: {
            pattern: ['#FF0000', '#F97600', '#F6C600', '#60B044'], // the three color levels for the percentage values.
            threshold: {
                //            unit: 'value', // percentage is default
                //            max: 200, // 100 is default
                values: [30, 60, 90, 100]
            }
        },
        size: {
            height: 300,
        }
    });
    setTimeout(function () {
        d3.select('#typingSpeed .c3-chart-arcs-background')
            .transition()
            .style('fill', '#333');
    }, 1000);
    setTimeout(function () {
        chart.load({
            columns: [['Typing Speed', speed]]
        });
    }, 100);
</script>